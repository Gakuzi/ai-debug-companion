{
  "version": 3,
  "sources": ["../bundle-k9wRb4/checked-fetch.js", "../../../src/worker.ts", "../../../../../../../opt/homebrew/Cellar/node/24.6.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../opt/homebrew/Cellar/node/24.6.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-k9wRb4/middleware-insertion-facade.js", "../../../../../../../opt/homebrew/Cellar/node/24.6.0/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-k9wRb4/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/evgeniy/analizer_error/collector/.wrangler/tmp/dev-e740GU",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// worker.ts\nexport interface Env {\n  STORAGE: R2Bucket;\n  PROJECT_TOKENS: string; // '{ \"test\": \"secret\" }'\n  GEMINI_API_KEY: string;\n}\n\n// Helper function to classify logs\nfunction classify(logs: any[]): string {\n  // Simple classification based on error levels\n  const errorCount = logs.filter(log => log.level === 'ERROR' || log.level === 'FATAL').length;\n  const warnCount = logs.filter(log => log.level === 'WARN').length;\n  \n  if (errorCount > 0) return 'critical';\n  if (warnCount > 0) return 'warning';\n  return 'info';\n}\n\n// Helper function to classify tupik situations\nfunction classifyTupik(data: any): string {\n  // Simple classification based on tupik data\n  if (data.errorPattern) return 'error_pattern';\n  if (data.deadlock) return 'deadlock';\n  return 'general';\n}\n\n// Helper function to build prompt for Gemini\nfunction buildPrompt(logs: any[], classification: string): string {\n  // \u041F\u043E\u044F\u0441\u043D\u0435\u043D\u0438\u0435 \u043D\u0430 \u0440\u0443\u0441\u0441\u043A\u043E\u043C: \u041F\u0440\u043E\u043C\u0442 \u0434\u043B\u044F Gemini: \u0430\u043D\u0430\u043B\u0438\u0437 \u043B\u043E\u0433\u043E\u0432, \u043F\u043B\u0430\u043D \u0444\u0438\u043A\u0441\u0430 (RCA/FIX/CONFIG).\n  return `Analyze the following logs and provide a detailed analysis with root cause analysis (RCA), fix suggestions, and configuration recommendations.\n  \nClassification: ${classification}\nLogs:\n${JSON.stringify(logs, null, 2)}\n\nPlease provide:\n1. Root Cause Analysis (RCA)\n2. Fix Suggestions\n3. Configuration Recommendations`;\n}\n\n// Helper function to build tupik prompt for Gemini\nfunction buildTupikPrompt(tupikData: any, classification: string): string {\n  // \u041F\u043E\u044F\u0441\u043D\u0435\u043D\u0438\u0435 \u043D\u0430 \u0440\u0443\u0441\u0441\u043A\u043E\u043C: \u041F\u0440\u043E\u043C\u0442 \u0430\u043D\u0430\u043B\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0442\u0443\u043F\u0438\u043A, \u043D\u0430\u0445\u043E\u0434\u0438\u0442 \u043E\u0448\u0438\u0431\u043A\u0443 \u0432\u043D\u0435 \u0444\u043E\u043A\u0443\u0441\u0430, \u0433\u0435\u043D\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0438\u043D\u0441\u0442\u0440\u0443\u043A\u0446\u0438\u0438.\n  return `Analyze the following deadlock/tupik situation and provide assistance to resolve it.\n  \nClassification: ${classification}\nTupik Data:\n${JSON.stringify(tupikData, null, 2)}\n\nPlease provide:\n1. Explanation of the deadlock situation\n2. Root cause analysis\n3. Instructions to resolve the deadlock\n4. Prevention recommendations`;\n}\n\n// Helper function to fetch from Gemini API\nasync function fetchGemini(prompt: string, apiKey: string): Promise<any> {\n  const response = await fetch('https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=' + apiKey, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      contents: [{\n        parts: [{\n          text: prompt\n        }]\n      }]\n    })\n  });\n\n  if (!response.ok) {\n    throw new Error(`Gemini API request failed with status ${response.status}`);\n  }\n\n  return await response.json();\n}\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    const url = new URL(request.url);\n    const method = request.method;\n\n    // Handle POST /ingest/logs\n    if (method === 'POST' && url.pathname === '/ingest/logs') {\n      // Authentication check\n      const authHeader = request.headers.get('Authorization');\n      if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        return new Response('Unauthorized', { status: 401 });\n      }\n\n      const token = authHeader.substring(7); // Remove 'Bearer ' prefix\n      let projectTokens = {};\n      try {\n        projectTokens = JSON.parse(env.PROJECT_TOKENS);\n      } catch (e) {\n        return new Response('Invalid PROJECT_TOKENS configuration', { status: 500 });\n      }\n      \n      // Find project ID that matches the token\n      const projectId = Object.keys(projectTokens).find(key => projectTokens[key] === token);\n      if (!projectId) {\n        return new Response('Invalid token', { status: 401 });\n      }\n\n      try {\n        const logs = await request.json();\n        \n        // Save logs to R2 storage\n        const key = `logs/${projectId}/${Date.now()}.json`;\n        await env.STORAGE.put(key, JSON.stringify(logs));\n        \n        console.log('\u041B\u043E\u0433\u0438 \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u044B');\n        \n        return new Response(JSON.stringify({ success: true, key }), {\n          headers: { 'Content-Type': 'application/json' },\n        });\n      } catch (error) {\n        return new Response('Error processing logs: ' + (error as Error).message, { status: 500 });\n      }\n    }\n\n    // Handle POST /analyze\n    if (method === 'POST' && url.pathname === '/analyze') {\n      try {\n        const requestData: any = await request.json();\n        const logs = requestData.logs || [];\n        \n        // Classify logs\n        const classification = classify(logs);\n        \n        // Build prompt\n        const prompt = buildPrompt(logs, classification);\n        \n        // Fetch analysis from Gemini\n        const geminiResponse = await fetchGemini(prompt, env.GEMINI_API_KEY);\n        \n        return new Response(JSON.stringify({\n          classification,\n          analysis: geminiResponse\n        }), {\n          headers: { 'Content-Type': 'application/json' },\n        });\n      } catch (error) {\n        return new Response('Error analyzing logs: ' + (error as Error).message, { status: 500 });\n      }\n    }\n\n    // Handle POST /tupik/analyze\n    if (method === 'POST' && url.pathname === '/tupik/analyze') {\n      try {\n        const tupikData: any = await request.json();\n        \n        // Classify tupik situation\n        const classification = classifyTupik(tupikData);\n        \n        // Build tupik prompt\n        const prompt = buildTupikPrompt(tupikData, classification);\n        \n        // Note: We're not actually calling Gemini here as per requirements\n        // Instead we're returning the prompt for the AI assistant\n        \n        return new Response(JSON.stringify({\n          explanation: \"\u042D\u0442\u043E\u0442 \u043F\u0440\u043E\u043C\u0442 \u0434\u043B\u044F \u0418\u0418-\u0430\u0441\u0441\u0438\u0441\u0442\u0435\u043D\u0442\u0430: \u0432\u0441\u0442\u0430\u0432\u044C\u0442\u0435 \u0432 Grok!\",\n          instructionPrompt: prompt\n        }), {\n          headers: { 'Content-Type': 'application/json' },\n        });\n      } catch (error) {\n        return new Response('Error analyzing tupik: ' + (error as Error).message, { status: 500 });\n      }\n    }\n\n    return new Response('Not Found', { status: 404 });\n  }\n};", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/evgeniy/analizer_error/collector/src/worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/opt/homebrew/Cellar/node/24.6.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/opt/homebrew/Cellar/node/24.6.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/evgeniy/analizer_error/collector/src/worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/evgeniy/analizer_error/collector/.wrangler/tmp/bundle-k9wRb4/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/opt/homebrew/Cellar/node/24.6.0/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/evgeniy/analizer_error/collector/.wrangler/tmp/bundle-k9wRb4/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/evgeniy/analizer_error/collector/.wrangler/tmp/bundle-k9wRb4/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
